// <auto-generated />
using CryptoMonitor.EntityFramework;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CryptoMonitor.EntityFramework.Migrations
{
    [DbContext(typeof(CryptoDbContext))]
    [Migration("20210319232835_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.4");

            modelBuilder.Entity("CryptoMonitor.Domain.Models.CryptoCurrency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<double>("CurrentPrice")
                        .HasColumnType("double");

                    b.Property<string>("Ticker")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("CryptoCurrecies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CurrentPrice = 0.0,
                            Ticker = "BTC"
                        },
                        new
                        {
                            Id = 2,
                            CurrentPrice = 0.0,
                            Ticker = "ETH"
                        },
                        new
                        {
                            Id = 3,
                            CurrentPrice = 0.0,
                            Ticker = "BNB"
                        },
                        new
                        {
                            Id = 4,
                            CurrentPrice = 0.0,
                            Ticker = "USDT"
                        },
                        new
                        {
                            Id = 5,
                            CurrentPrice = 0.0,
                            Ticker = "ADA"
                        },
                        new
                        {
                            Id = 6,
                            CurrentPrice = 0.0,
                            Ticker = "DOT"
                        },
                        new
                        {
                            Id = 7,
                            CurrentPrice = 0.0,
                            Ticker = "XRP"
                        },
                        new
                        {
                            Id = 8,
                            CurrentPrice = 0.0,
                            Ticker = "UNI"
                        },
                        new
                        {
                            Id = 9,
                            CurrentPrice = 0.0,
                            Ticker = "LTC"
                        },
                        new
                        {
                            Id = 10,
                            CurrentPrice = 0.0,
                            Ticker = "LINK"
                        });
                });

            modelBuilder.Entity("CryptoMonitor.Domain.Models.HighestPrice", b =>
                {
                    b.Property<double>("highestPrice")
                        .HasColumnType("double");

                    b.ToTable("HighestPrices");
                });

            modelBuilder.Entity("CryptoMonitor.Domain.Models.LowestPrice", b =>
                {
                    b.Property<double>("lowestPrice")
                        .HasColumnType("double");

                    b.ToTable("LowestPrices");
                });
#pragma warning restore 612, 618
        }
    }
}
